1. Number of questions by year
SELECT
  EXTRACT(YEAR FROM creation_date) AS year,
  COUNT(*) AS total_questions
FROM `bigquery-public-data.stackoverflow.posts_questions`
GROUP BY year
ORDER BY year;

2. Top 10 most popular tags
(needs to process tags as an array)
SELECT
  tag,
  COUNT(*) AS tag_count
FROM (
  SELECT
    LOWER(REGEXP_EXTRACT_ALL(tags, r'<(.*?)>')) AS tag_list
  FROM `bigquery-public-data.stackoverflow.posts_questions`
), UNNEST(tag_list) AS tag
GROUP BY tag
ORDER BY tag_count DESC
LIMIT 10;

3. Most viewed questions
SELECT
  title,
  view_count,
  score,
  answer_count,
  creation_date
FROM `bigquery-public-data.stackoverflow.posts_questions`
ORDER BY view_count DESC
LIMIT 10;

4. Unanswered questions from the past year
SELECT
  title,
  creation_date,
  tags
FROM `bigquery-public-data.stackoverflow.posts_questions`
WHERE answer_count = 0
  AND creation_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR)
ORDER BY creation_date DESC
LIMIT 10;

5. Python questions by year
SELECT
  EXTRACT(YEAR FROM creation_date) AS year,
  COUNT(*) AS python_questions
FROM `bigquery-public-data.stackoverflow.posts_questions`
WHERE LOWER(tags) LIKE '%<python>%'
GROUP BY year
ORDER BY year;

6. Which tags are growing the fastest?
SELECT
  tag,
  EXTRACT(YEAR FROM creation_date) AS year,
  COUNT(*) AS question_count
FROM (
  SELECT
    creation_date,
    REGEXP_EXTRACT_ALL(LOWER(tags), r'<(.*?)>') AS tag_list
  FROM `bigquery-public-data.stackoverflow.posts_questions`
)
CROSS JOIN UNNEST(tag_list) AS tag
GROUP BY tag, year
HAVING year >= 2018
ORDER BY tag, year;
→ Then you can calculate the growth rate, for example: there were 1k questions on <sql> in 2020, and 5k in 2024 — an increase of +400%.

7. How “highly valued” are different languages?
Let's calculate the average score for questions with popular tags.
SELECT
  tag,
  ROUND(AVG(score), 2) AS avg_score,
  COUNT(*) AS total_questions
FROM (
  SELECT
    score,
    REGEXP_EXTRACT_ALL(LOWER(tags), r'<(.*?)>') AS tag_list
  FROM `bigquery-public-data.stackoverflow.posts_questions`
  WHERE score IS NOT NULL
)
CROSS JOIN UNNEST(tag_list) AS tag
GROUP BY tag
HAVING total_questions > 1000
ORDER BY avg_score DESC
LIMIT 15;

8. Number of questions with ≥5 answers
SELECT
  COUNT(*) AS questions_with_many_answers
FROM `bigquery-public-data.stackoverflow.posts_questions`
WHERE answer_count >= 5;
